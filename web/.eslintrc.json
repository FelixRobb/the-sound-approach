{
  "root": true,
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "ecmaVersion": 2021,
    "sourceType": "module",
    "ecmaFeatures": {
      "jsx": true
    }
    // Still keeping "project" removed to avoid type-checking in ESLint
  },
  "env": {
    "browser": true,
    "node": true,
    "es6": true
  },
  "plugins": ["@typescript-eslint", "react", "react-hooks", "jsx-a11y", "import"],
  // Added back "import" plugin
  "extends": [
    "eslint:recommended",
    "plugin:@typescript-eslint/recommended",
    "plugin:react/recommended",
    "plugin:react-hooks/recommended",
    "plugin:jsx-a11y/recommended",
    "plugin:import/errors",
    "plugin:import/warnings",
    "plugin:import/typescript",
    "plugin:@next/next/recommended"
  ],
  "rules": {
    // TypeScript rules - only syntax-based rules
    "@typescript-eslint/no-explicit-any": "warn",
    "@typescript-eslint/no-unused-vars": [
      "error",
      { "argsIgnorePattern": "^_", "varsIgnorePattern": "^_" }
    ],
    "@typescript-eslint/no-non-null-assertion": "warn",

    // React specific rules
    "react/prop-types": "off",
    "react/react-in-jsx-scope": "off",
    "react/jsx-filename-extension": ["error", { "extensions": [".tsx"] }],
    "react/jsx-props-no-spreading": "off",
    "react/no-unescaped-entities": "warn",
    "react/no-danger": "warn",
    "react/self-closing-comp": ["error", { "component": true, "html": true }],

    // React Hooks
    "react-hooks/rules-of-hooks": "error",
    "react-hooks/exhaustive-deps": "warn",

    // Accessibility - critical rules only
    "jsx-a11y/alt-text": "error",
    "jsx-a11y/anchor-is-valid": ["warn", { "components": ["Link"], "aspects": ["invalidHref"] }],

    // Import organization - adding back these rules
    "import/order": [
      "warn",
      {
        "groups": ["builtin", "external", "internal", "parent", "sibling", "index"],
        "newlines-between": "always",
        "alphabetize": { "order": "asc", "caseInsensitive": true }
      }
    ],
    "import/no-duplicates": "error",

    // General best practices
    "no-console": ["warn", { "allow": ["warn", "error", "info"] }],
    "no-debugger": "error",
    "no-alert": "warn",
    "no-var": "error",
    "prefer-const": "error",
    "eqeqeq": ["warn", "always"]
  },
  "settings": {
    "react": {
      "version": "detect"
    },
    "import/resolver": {
      "typescript": {},
      "node": {
        "extensions": [".js", ".jsx", ".ts", ".tsx"]
      }
    }
  }
}
